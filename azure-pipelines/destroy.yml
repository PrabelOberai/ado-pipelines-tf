pool:
  name: 'Default'

variables:
  terraformVersion: '1.5.5'  # Specify the Terraform version
  azureServiceConnection: 'azurerm'  # Azure service connection name
  backendResourceGroup: 'skink-rg'
  backendStorageAccount: 'skinktfstate'  # Remote backend storage account
  backendContainer: 'tfstate'  # Remote backend storage container
  backendKey: 'terraform.tfstate'  # State file name in remote backend

stages:
  - stage: Initialization
    jobs:
      - job: TerraformInit
        steps:
          - task: TerraformInstaller@0  # Install Terraform
            inputs:
              terraformVersion: $(terraformVersion)

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'tfstate'
              path: '$(System.DefaultWorkingDirectory)/terraform'

          # Initialize Terraform
          #- task: TerraformTaskV4@4
          #  inputs:
          #    provider: 'azurerm'
          #    backendServiceArm: $(azureServiceConnection)
          #    backendAzureRmResourceGroupName: $(backendResourceGroup)
          #    backendAzureRmStorageAccountName: $(backendStorageAccount)
          #    backendAzureRmContainerName: $(backendContainer)
          #    backendAzureRmKey: $(backendKey)
          #    command: 'init'  # Initialize Terraform
          #    workingDirectory: 'terraform'  # Set the working directory

          - script: |
              terraform init -backend=false
            workingDirectory: terraform
            displayName: 'Terraform Init (Local Backend)'

          # Validate Terraform configuration
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'  # Validate Terraform configuration
              workingDirectory: 'terraform'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'destroy'  # Run terraform destroy
              commandOptions: '--auto-approve'  # Automatically approve the destroy action
              environmentServiceNameAzureRM: $(azureServiceConnection)  # Azure service connection for authentication
              workingDirectory: 'terraform'  # Set the working directory
